name: tagged-aeson
version: 1.0.0
synopsis: Have many Aeson instances for the same type!
description:
  This package provides alternative 'FromJSON' and 'ToJSON' classes
  that come equipped with a tag. This lets you have several different
  Aeson instances for the same type.
build-type: Simple
extra-source-files: CHANGELOG.md
cabal-version: >=1.10
homepage: https://github.com/monadfix/tagged-aeson
bug-reports: https://github.com/monadfix/tagged-aeson/issues
license: BSD3
license-file: LICENSE
author: Artyom Kazak
maintainer: Monadfix <hi@monadfix.com>
category: Text, Web, JSON
tested-with:
  GHC == 8.6.4
  GHC == 8.4.4

source-repository head
  type: git
  location: git://github.com/monadfix/tagged-aeson.git

library
  exposed-modules:
    Data.Aeson.Tagged
    Data.Aeson.Tagged.TH
    Data.Aeson.Tagged.Aeson
    Data.Aeson.Tagged.Wrapped
    Data.Aeson.Tagged.Classes
    Data.Aeson.Tagged.Explicit
  build-depends:
    aeson,
    base >=4.8 && <5,
    base-prelude,
    containers,
    deepseq,
    dlist,
    hashable,
    scientific,
    template-haskell >=2.12 && <2.15,
    text,
    th-lift,
    uniplate,
    unordered-containers,
    vector
  ghc-options:
    -Wall
    -Wno-unused-do-bind
  hs-source-dirs: lib
  default-language: Haskell2010
  default-extensions:
    ScopedTypeVariables
    TypeApplications
    RankNTypes
    KindSignatures
    PolyKinds
    LambdaCase
    ViewPatterns
    DefaultSignatures
    DerivingStrategies
    FlexibleInstances
    PatternSynonyms
    MultiParamTypeClasses
    FunctionalDependencies
    DeriveLift
    StandaloneDeriving

test-suite tests
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
    Data.Aeson.TaggedSpec
    Data.Aeson.Tagged.ExplicitSpec
    Data.Aeson.Tagged.THSpec
    Utils
    Types
  build-depends:
    base,
    hspec,
    text,
    aeson,
    base-prelude,
    template-haskell,
    th-lift,
    vector,
    containers,
    unordered-containers,
    tagged-aeson
  build-tool-depends: hspec-discover:hspec-discover
  ghc-options:
    -Wall
    -Wno-unused-do-bind
  hs-source-dirs: test
  default-language: Haskell2010
  default-extensions:
    ScopedTypeVariables
    TypeApplications
    RankNTypes
    KindSignatures
    PolyKinds
    LambdaCase
    ViewPatterns
    DefaultSignatures
    DerivingStrategies
    FlexibleInstances
    PatternSynonyms
    MultiParamTypeClasses
    FunctionalDependencies
    DeriveLift
    StandaloneDeriving
